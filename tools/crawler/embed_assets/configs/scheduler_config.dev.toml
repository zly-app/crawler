[crawler_scheduler]
# 程序配置文件路径
programs_config_file = './configs/supervisor_programs.dev.toml'

# honey日志收集插件配置项
[plugins.honey]
# 输出时标示的环境名
Env = 'dev'
# 输出时标示的app名, 如果为空则使用默认名
#App = ''
# 输出时标示的实例名, 如果为空则使用本地ip
#Instance = ''
# 停止原有的日志输出
StopLogOutput = false
# 日志批次大小, 累计达到这个大小立即输出一次日志, 不用等待时间
#LogBatchSize = 10000
# 自动旋转时间(秒), 如果没有达到累计输出批次大小, 在指定时间后也会立即输出
#AutoRotateTime = 3
# 最大旋转线程数, 表示同时允许多少批次发送到输出设备
#MaxRotateThreadNum = 10
# 输出设备列表, 多个输出设备用半角逗号`,`分隔, 支持 std, honey-http, loki-http
Outputs = ''

# honey-http输出设备配置项
[plugins.honey.honey-http]
# 关闭
#Disable = false
# push地址, 示例: http://127.0.0.1:8080/push
#PushAddress = 'http://127.0.0.1:8080/push'
# 压缩器名
#Compress = 'zstd'
# 序列化器名
#Serializer = 'msgpack'
# 验证token, 如何设置, 请求header必须带上 token={AuthToken}, 如 token=myAuthToken
#AuthToken = ''
# 请求超时, 单位秒
#ReqTimeout = 5
# 请求失败重试次数, 0表示禁用
#RetryCount = 2
# 请求失败重试间隔毫秒数
#RetryIntervalMs = 2000
# 代理地址. 支持 http, https, socks5, socks5h. 示例: socks5://127.0.0.1:1080
#ProxyAddress = ''
# 代理用户名
#ProxyUser = ''
# 代理用户密码
#ProxyPasswd = ''

# loki-http输出设备配置项
[plugins.honey.loki-http]
# 关闭
#Disable = false
# push地址, 示例: http://127.0.0.1:3100/loki/api/v1/push
#PushAddress = 'http://127.0.0.1:3100/loki/api/v1/push'
# 是否启用压缩
#EnableCompress = true
# 请求超时, 单位秒
#ReqTimeout = 5
# 请求失败重试次数, 0表示禁用
#RetryCount = 2
# 请求失败重试间隔毫秒数
#RetryIntervalMs = 2000
# 代理地址. 支持 http, https, socks5, socks5h. 示例: socks5://127.0.0.1:1080
#ProxyAddress = ''
# 代理用户名
#ProxyUser = ''
# 代理用户密码
#ProxyPasswd = ''

# app框架配置
[frame]
# debug标志
#debug = false
# 主动清理内存间隔时间(毫秒), <= 0 表示禁用
#FreeMemoryInterval = 120000
# 默认等待服务启动阶段, 等待时间(毫秒), 如果时间到未收到服务启动成功信号则将服务标记为不稳定状态然后继续开始工作(我们总不能一直等着吧)
#WaitServiceRunTime = 1000
# 默认服务不稳定观察时间, 等待时间(毫秒), 如果时间到仍未收到服务启动成功信号也将服务标记为启动成功
#ServiceUnstableObserveTime = 120000

# 日志配置
[frame.log]
# 自身日志等级, debug, info, warn, error, dpanic, panic, fatal
#Level = 'debug'
# 启用json编码器, 输出的每一行日志转为json格式
#Json = false
# 输出到屏幕
#WriteToStream = true
# 日志是否输出到文件
#WriteToFile = false
# 日志文件名, 末尾会自动附加 .log 后缀, 如果为空则使用app名
#Name = ''
# 是否在日志文件名后附加进程号
#AppendPid = false
# 默认日志存放路径
#Path = './log'
# 每个日志最大尺寸,单位M
#FileMaxSize = 32
# 日志文件最多保存多少个备份, 0表示永久
#FileMaxBackupsNum = 3
# 文件最多保存多长时间,单位天, 0表示永久
#FileMaxDurableTime = 7
# 是否压缩历史日志
#Compress = false
# 时间显示格式
#TimeFormat = '2006-01-02 15:04:05'
# 是否打印彩色日志等级, 只有关闭json编码器才生效
#Color = true
# 是否大写日志等级
#CapitalLevel = false
# 开发者模式, 在开发者模式下日志记录器在写完DPanic消息后程序会感到恐慌
#DevelopmentMode = true
# 显示文件路径和行号
#ShowFileAndLinenum = true
# 最小显示文件路径和行号的等级
#ShowFileAndLinenumMinLevel = 'warn'
# 对zap.Duration转为毫秒
#MillisDuration = true
