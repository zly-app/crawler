package main

import (
	"github.com/zly-app/zapp"
	zapp_config "github.com/zly-app/zapp/config"

	"github.com/zly-app/crawler"
	"github.com/zly-app/crawler/core"

	"{@project_name}/component"
)

// 一个spider
type Spider struct {
	c component.IComponent
	core.ISpiderTool
}

func newSpider() core.ISpider {
	return &Spider{c: component.GetComponent()}
}

// 初始化
func (s *Spider) Init() error {
	return nil
}

// 提交初始化种子
func (s *Spider) SubmitInitialSeed() error {
	seed := s.NewSeed("https://www.sogou.com/", s.Parser) // 创建种子并指定解析方法
	s.SubmitSeed(seed)                                    // 提交种子
	return nil
}

// 解析方法
func (s *Spider) Parser(seed *core.Seed) error {
	fmt.Println(string(seed.HttpResponseBody)) // 打印响应body
	return nil
}

// 关闭
func (s *Spider) Close() error { return nil }

func main() {
	app := zapp.NewApp("{@spider_name}",
		crawler.WithService(), // 启用crawler服务
		zapp.WithCustomComponent(component.CustomComponentCreator), // 使用自定义组件
		zapp.WithConfigOption(zapp_config.WithFiles("./configs/crawler_config.{@env}.toml", "./spiders/{@spider_name}/configs/config.{@env}.toml")),
	)
	crawler.RegistrySpider(newSpider()) // 注入spider
	app.Run()                           // 运行
}
