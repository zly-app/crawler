package main

import (
	"context"

	"github.com/zly-app/crawler"
	"github.com/zly-app/crawler/core"
	"github.com/zly-app/plugin/honey"
	"github.com/zly-app/plugin/zipkinotel"
	"github.com/zly-app/zapp"
	zapp_config "github.com/zly-app/zapp/config"

	"{@project_name}/{@spider_name}/component"
)

// 一个spider
type Spider struct {
	c component.IComponent
	core.ISpiderTool
}

func newSpider() core.ISpider {
	return &Spider{c: component.GetComponent()}
}

// 初始化
func (s *Spider) Init(ctx context.Context) error {
	return nil
}

// 提交初始化种子
func (s *Spider) SubmitInitialSeed(ctx context.Context) error {
	seed := s.NewSeed("https://www.sogou.com/", s.Parser) // 创建种子并指定解析方法
	s.SubmitSeed(ctx, seed)                                    // 提交种子
	return nil
}

// 解析方法
func (s *Spider) Parser(ctx context.Context, seed *core.Seed) error {
	data := string(seed.HttpResponseBody) // 获取响应body
	s.SaveResult(ctx, data)                    // 保存结果
	return nil
}

// 关闭
func (s *Spider) Close(ctx context.Context) error { return nil }

func main() {
	app := zapp.NewApp("{@spider_name}",
		crawler.WithService(),   // 启用crawler服务
		honey.WithPlugin(),      // 日志收集
		zipkinotel.WithPlugin(), // 链路
		zapp.WithCustomComponent(component.CustomComponentCreator), // 使用自定义组件
		zapp.WithConfigOption(zapp_config.WithFiles("../../configs/spider_base_config.dev.yaml", "./configs/config.dev.yaml")),
	)
	crawler.RegistrySpider(newSpider()) // 注入spider
	app.Run()                           // 运行
}
